{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Login - Logout\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import { Button, Flex, FormControl, Heading, Stack, VStack } from '@chakra-ui/react'\nimport { Button, Flex, VStack, FormControl, Heading, Stack, FormLabel, Input, InputGroup, InputRightElement } from '@chakra-ui/react';\nimport { React, useState } from 'react';\nimport { authenticateUser, signOnService } from '../services/login';\nimport { useNavigate } from 'react-router-dom';\nimport AlertItem from '../components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialUser = {\n  email: '',\n  name: '',\n  password: '',\n  isMember: true\n};\nconst LoginP = () => {\n  _s();\n  // for user\n  const navigate = useNavigate();\n  const [user, setUser] = useState(initialUser);\n  const handleUser = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  // toggle between login and user page\n  const toggleMember = () => {\n    setUser({\n      ...user,\n      isMember: !user.isMember\n    });\n  };\n  // checking if already logged in\n\n  const userAlreadyLoggedIn = async () => {\n    const response = await authenticateUser();\n    if (!response) navigate('/dashboard');\n  };\n  useState(() => {\n    userAlreadyLoggedIn();\n  });\n  // alert variable\n  const [alert, setAlert] = useState({\n    showAlert: false,\n    msg: '',\n    heading: '',\n    type: ''\n  });\n  // const displayAlert = (newAlert) => {\n  //   setAlert({...alert, newAlert})\n  // }\n  //submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await signOnService(user);\n    setAlert({\n      showAlert: true,\n      msg: response.data.msg ? response.data.msg : response.data.errors[0].msg,\n      heading: response.data.heading ? response.data.heading : 'Invalid Credentials',\n      type: response.status === 200 ? 'success' : 'error'\n    });\n    if (alert.msg === 'Invalid value') setAlert({\n      ...alert\n    });\n    if (response.status === 200) {\n      user.isMember && setTimeout(() => {\n        navigate('/dashboard');\n      }, 4000);\n    } else {\n      setTimeout(() => {\n        setAlert({\n          ...alert,\n          showAlert: false\n        });\n      }, 5000);\n    }\n  };\n  // for passwords\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(!show);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: 'flexed-top',\n    marginTop: \"7%\",\n    justifyContent: 'center',\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textAlign: 'center',\n          children: user.isMember ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), alert.showAlert && /*#__PURE__*/_jsxDEV(AlertItem, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          marginTop: '2%',\n          children: !user.isMember && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              type: \"text\",\n              value: user.name,\n              onChange: handleUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          marginTop: '3%',\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            type: \"email\",\n            value: user.email,\n            onChange: handleUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          marginTop: '5%',\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            size: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              pr: \"4.5rem\",\n              type: show ? 'text' : 'password',\n              placeholder: \"Enter password\",\n              value: user.password,\n              onChange: handleUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n              width: \"4.5rem\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                h: \"1.75rem\",\n                size: \"sm\",\n                onClick: handleShow,\n                children: show ? 'Hide' : 'Show'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"orange\",\n          marginTop: '2%',\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: 'teal',\n          variant: \"ghost\",\n          float: 'right',\n          marginTop: \"2%\",\n          onClick: toggleMember,\n          children: !user.isMember ? 'Already a member? Login Here' : 'Not a member yet? Register Here'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginP, \"8Oll7eHw3L3J3nZ0aafmOrFWwYg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginP;\nexport default LoginP;\nvar _c;\n$RefreshReg$(_c, \"LoginP\");","map":{"version":3,"names":["Button","Flex","VStack","FormControl","Heading","Stack","FormLabel","Input","InputGroup","InputRightElement","React","useState","authenticateUser","signOnService","useNavigate","AlertItem","initialUser","email","name","password","isMember","LoginP","navigate","user","setUser","handleUser","e","target","value","toggleMember","userAlreadyLoggedIn","response","alert","setAlert","showAlert","msg","heading","type","handleSubmit","preventDefault","data","errors","status","setTimeout","show","setShow","handleShow"],"sources":["D:/MERN/Login - Logout/client/src/pages/Login.jsx"],"sourcesContent":["// import { Button, Flex, FormControl, Heading, Stack, VStack } from '@chakra-ui/react'\r\nimport {\r\n  Button,\r\n  Flex,\r\n  VStack,\r\n  FormControl,\r\n  Heading,\r\n  Stack,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n} from '@chakra-ui/react';\r\nimport { React, useState } from 'react';\r\nimport { authenticateUser, signOnService } from '../services/login';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AlertItem from '../components/Alert';\r\n\r\nconst initialUser = {\r\n  email: '',\r\n  name: '',\r\n  password: '',\r\n  isMember: true,\r\n};\r\n\r\nconst LoginP = () => {\r\n  // for user\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(initialUser);\r\n  const handleUser = e => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  // toggle between login and user page\r\n  const toggleMember = () => {\r\n    setUser({ ...user, isMember: !user.isMember });\r\n  };\r\n  // checking if already logged in\r\n  \r\n  const userAlreadyLoggedIn = async () => {\r\n    const response = await authenticateUser();\r\n    if (!response) navigate('/dashboard');\r\n  };\r\n  useState(() => {\r\n    userAlreadyLoggedIn();\r\n  });\r\n  // alert variable\r\n  const [alert, setAlert] = useState({\r\n    showAlert: false,\r\n    msg: '',\r\n    heading: '',\r\n    type: '',\r\n  });\r\n  // const displayAlert = (newAlert) => {\r\n  //   setAlert({...alert, newAlert})\r\n  // }\r\n  //submit\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await signOnService(user);\r\n\r\n    setAlert({\r\n      showAlert: true,\r\n      msg: response.data.msg ? response.data.msg : response.data.errors[0].msg,\r\n      heading: response.data.heading ? response.data.heading : 'Invalid Credentials',\r\n      type: response.status === 200 ? 'success' : 'error',\r\n    });\r\nif(alert.msg === 'Invalid value')\r\nsetAlert({...alert,})\r\n    if (response.status === 200) {\r\n      user.isMember &&\r\n        setTimeout(() => {\r\n          navigate('/dashboard');\r\n        }, 4000);\r\n    } else {\r\n      setTimeout(() => {\r\n        setAlert({\r\n          ...alert,\r\n          showAlert: false,\r\n        });\r\n      }, 5000);\r\n    }\r\n  };\r\n  // for passwords\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => setShow(!show);\r\n  return (\r\n    <Flex alignItems={'flexed-top'} marginTop=\"7%\" justifyContent={'center'}>\r\n      <VStack>\r\n        <FormControl>\r\n          {/* heading  */}\r\n          <Heading textAlign={'center'}>\r\n            {user.isMember ? 'Login' : 'Register'}\r\n          </Heading>\r\n\r\n          {/* alert */}\r\n          {alert.showAlert && (\r\n            <AlertItem alert={alert} />\r\n          )}\r\n\r\n          {/* name for registration */}\r\n          <Stack marginTop={'2%'}>\r\n            {!user.isMember && (\r\n              <>\r\n                <FormLabel>Name</FormLabel>\r\n                <Input\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  value={user.name}\r\n                  onChange={handleUser}\r\n                />\r\n              </>\r\n            )}\r\n          </Stack>\r\n\r\n          {/* email */}\r\n          <Stack marginTop={'3%'}>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={user.email}\r\n              onChange={handleUser}\r\n            />\r\n          </Stack>\r\n\r\n          {/* password */}\r\n          <Stack marginTop={'5%'}>\r\n            <FormLabel>Password</FormLabel>\r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                name=\"password\"\r\n                pr=\"4.5rem\"\r\n                type={show ? 'text' : 'password'}\r\n                placeholder=\"Enter password\"\r\n                value={user.password}\r\n                onChange={handleUser}\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleShow}>\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </Stack>\r\n\r\n          {/* Submit */}\r\n          <Button colorScheme=\"orange\" marginTop={'2%'} onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n\r\n          {/* Toggle button */}\r\n          <Button\r\n            colorScheme={'teal'}\r\n            variant=\"ghost\"\r\n            float={'right'}\r\n            marginTop=\"2%\"\r\n            onClick={toggleMember}\r\n          >\r\n            {!user.isMember\r\n              ? 'Already a member? Login Here'\r\n              : 'Not a member yet? Register Here'}\r\n          </Button>\r\n        </FormControl>\r\n      </VStack>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default LoginP;\r\n"],"mappings":";;AAAA;AACA,SACEA,MAAM,EACNC,IAAI,EACJC,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,UAAU,EACVC,iBAAiB,QACZ,kBAAkB;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,EAAEC,aAAa,QAAQ,mBAAmB;AACnE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,qBAAqB;AAAC;AAAA;AAE5C,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB;EACA,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACK,WAAW,CAAC;EAC7C,MAAMS,UAAU,GAAGC,CAAC,IAAI;IACtBF,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACG,CAAC,CAACC,MAAM,CAACT,IAAI,GAAGQ,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACvD,CAAC;EACD;EACA,MAAMC,YAAY,GAAG,MAAM;IACzBL,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEH,QAAQ,EAAE,CAACG,IAAI,CAACH;IAAS,CAAC,CAAC;EAChD,CAAC;EACD;;EAEA,MAAMU,mBAAmB,GAAG,YAAY;IACtC,MAAMC,QAAQ,GAAG,MAAMnB,gBAAgB,EAAE;IACzC,IAAI,CAACmB,QAAQ,EAAET,QAAQ,CAAC,YAAY,CAAC;EACvC,CAAC;EACDX,QAAQ,CAAC,MAAM;IACbmB,mBAAmB,EAAE;EACvB,CAAC,CAAC;EACF;EACA,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC;IACjCuB,SAAS,EAAE,KAAK;IAChBC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA,MAAMC,YAAY,GAAG,MAAMZ,CAAC,IAAI;IAC9BA,CAAC,CAACa,cAAc,EAAE;IAClB,MAAMR,QAAQ,GAAG,MAAMlB,aAAa,CAACU,IAAI,CAAC;IAE1CU,QAAQ,CAAC;MACPC,SAAS,EAAE,IAAI;MACfC,GAAG,EAAEJ,QAAQ,CAACS,IAAI,CAACL,GAAG,GAAGJ,QAAQ,CAACS,IAAI,CAACL,GAAG,GAAGJ,QAAQ,CAACS,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACN,GAAG;MACxEC,OAAO,EAAEL,QAAQ,CAACS,IAAI,CAACJ,OAAO,GAAGL,QAAQ,CAACS,IAAI,CAACJ,OAAO,GAAG,qBAAqB;MAC9EC,IAAI,EAAEN,QAAQ,CAACW,MAAM,KAAK,GAAG,GAAG,SAAS,GAAG;IAC9C,CAAC,CAAC;IACN,IAAGV,KAAK,CAACG,GAAG,KAAK,eAAe,EAChCF,QAAQ,CAAC;MAAC,GAAGD;IAAM,CAAC,CAAC;IACjB,IAAID,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;MAC3BnB,IAAI,CAACH,QAAQ,IACXuB,UAAU,CAAC,MAAM;QACfrB,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,MAAM;MACLqB,UAAU,CAAC,MAAM;QACfV,QAAQ,CAAC;UACP,GAAGD,KAAK;UACRE,SAAS,EAAE;QACb,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EACD;EACA,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMmC,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAI,CAAC;EACvC,oBACE,QAAC,IAAI;IAAC,UAAU,EAAE,YAAa;IAAC,SAAS,EAAC,IAAI;IAAC,cAAc,EAAE,QAAS;IAAA,uBACtE,QAAC,MAAM;MAAA,uBACL,QAAC,WAAW;QAAA,wBAEV,QAAC,OAAO;UAAC,SAAS,EAAE,QAAS;UAAA,UAC1BrB,IAAI,CAACH,QAAQ,GAAG,OAAO,GAAG;QAAU;UAAA;UAAA;UAAA;QAAA,QAC7B,EAGTY,KAAK,CAACE,SAAS,iBACd,QAAC,SAAS;UAAC,KAAK,EAAEF;QAAM;UAAA;UAAA;UAAA;QAAA,QACzB,eAGD,QAAC,KAAK;UAAC,SAAS,EAAE,IAAK;UAAA,UACpB,CAACT,IAAI,CAACH,QAAQ,iBACb;YAAA,wBACE,QAAC,SAAS;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAY,eAC3B,QAAC,KAAK;cACJ,IAAI,EAAC,MAAM;cACX,IAAI,EAAC,MAAM;cACX,KAAK,EAAEG,IAAI,CAACL,IAAK;cACjB,QAAQ,EAAEO;YAAW;cAAA;cAAA;cAAA;YAAA,QACrB;UAAA;QAEL;UAAA;UAAA;UAAA;QAAA,QACK,eAGR,QAAC,KAAK;UAAC,SAAS,EAAE,IAAK;UAAA,wBACrB,QAAC,SAAS;YAAA,UAAC;UAAa;YAAA;YAAA;YAAA;UAAA,QAAY,eACpC,QAAC,KAAK;YACJ,IAAI,EAAC,OAAO;YACZ,IAAI,EAAC,OAAO;YACZ,KAAK,EAAEF,IAAI,CAACN,KAAM;YAClB,QAAQ,EAAEQ;UAAW;YAAA;YAAA;YAAA;UAAA,QACrB;QAAA;UAAA;UAAA;UAAA;QAAA,QACI,eAGR,QAAC,KAAK;UAAC,SAAS,EAAE,IAAK;UAAA,wBACrB,QAAC,SAAS;YAAA,UAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAY,eAC/B,QAAC,UAAU;YAAC,IAAI,EAAC,IAAI;YAAA,wBACnB,QAAC,KAAK;cACJ,IAAI,EAAC,UAAU;cACf,EAAE,EAAC,QAAQ;cACX,IAAI,EAAEmB,IAAI,GAAG,MAAM,GAAG,UAAW;cACjC,WAAW,EAAC,gBAAgB;cAC5B,KAAK,EAAErB,IAAI,CAACJ,QAAS;cACrB,QAAQ,EAAEM;YAAW;cAAA;cAAA;cAAA;YAAA,QACrB,eACF,QAAC,iBAAiB;cAAC,KAAK,EAAC,QAAQ;cAAA,uBAC/B,QAAC,MAAM;gBAAC,CAAC,EAAC,SAAS;gBAAC,IAAI,EAAC,IAAI;gBAAC,OAAO,EAAEqB,UAAW;gBAAA,UAC/CF,IAAI,GAAG,MAAM,GAAG;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAChB;cAAA;cAAA;cAAA;YAAA,QACS;UAAA;YAAA;YAAA;YAAA;UAAA,QACT;QAAA;UAAA;UAAA;UAAA;QAAA,QACP,eAGR,QAAC,MAAM;UAAC,WAAW,EAAC,QAAQ;UAAC,SAAS,EAAE,IAAK;UAAC,OAAO,EAAEN,YAAa;UAAA,UAAC;QAErE;UAAA;UAAA;UAAA;QAAA,QAAS,eAGT,QAAC,MAAM;UACL,WAAW,EAAE,MAAO;UACpB,OAAO,EAAC,OAAO;UACf,KAAK,EAAE,OAAQ;UACf,SAAS,EAAC,IAAI;UACd,OAAO,EAAET,YAAa;UAAA,UAErB,CAACN,IAAI,CAACH,QAAQ,GACX,8BAA8B,GAC9B;QAAiC;UAAA;UAAA;UAAA;QAAA,QAC9B;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX,CAAC;AAAC,GA7IIC,MAAM;EAAA,QAEOP,WAAW;AAAA;AAAA,KAFxBO,MAAM;AA+IZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}