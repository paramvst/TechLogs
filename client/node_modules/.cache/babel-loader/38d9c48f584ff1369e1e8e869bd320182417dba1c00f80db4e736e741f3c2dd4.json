{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Login - Logout\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import { Button, Flex, FormControl, Heading, Stack, VStack } from '@chakra-ui/react'\nimport { Button } from '@chakra-ui/react';\nimport { React, useState } from 'react';\n// import {Login, Register} from '../components'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginP = () => {\n  _s();\n  const [isMember, setMember] = useState(0);\n  // const initialUser = {email: '', \n  // name:'', \n  // password:''}\n  // const [user, setUser] = useState(initialUser)\n  // const handleUser =(e) => {\n  //   setUser()\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onChange: true,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"Value is: \", isMember]\n  }, void 0, true)\n\n  //   <Flex alignItems={'flexed-top'} marginTop='7%' justifyContent={'center'}>\n  //   <VStack>\n  //   <FormControl>\n  //         <Heading textAlign={'center'}>{isMember ? \"Login\" : \"Register\"}</Heading>\n  //         <Stack marginTop={'2%'}>\n  //           {(!isMember) && <Register user={user} handleUser={handleUser} />}\n  //         </Stack>\n\n  //   <Login user={user} handleUser={handleUser} />\n\n  //   <Button colorScheme={'teal'} variant='ghost' float={'right'} marginTop='2%' onClick={toggleMember}>\n  //       {!isMember ? 'Already a member? Login Here' : 'Not a member yet? Register Here'}\n  //   </Button>\n  //   </FormControl>\n  //   </VStack>\n  // </Flex>\n  ;\n};\n_s(LoginP, \"jI0+Fy5T14c+uX2/Q0zzuEQ7Y0g=\");\n_c = LoginP;\nexport default LoginP;\nvar _c;\n$RefreshReg$(_c, \"LoginP\");","map":{"version":3,"names":["Button","React","useState","LoginP","isMember","setMember"],"sources":["D:/MERN/Login - Logout/client/src/pages/Login.jsx"],"sourcesContent":["// import { Button, Flex, FormControl, Heading, Stack, VStack } from '@chakra-ui/react'\r\nimport { Button } from '@chakra-ui/react'\r\nimport {React, useState} from 'react'\r\n// import {Login, Register} from '../components'\r\nconst LoginP = () => {\r\n    const [isMember, setMember] = useState(0)\r\n    // const initialUser = {email: '', \r\n    // name:'', \r\n    // password:''}\r\n    // const [user, setUser] = useState(initialUser)\r\n    // const handleUser =(e) => {\r\n    //   setUser()\r\n    // }\r\n    \r\n  return (\r\n<>  \r\n<Button onChange>click me</Button>\r\n<br />\r\nValue is: {isMember}\r\n</>\r\n\r\n\r\n  //   <Flex alignItems={'flexed-top'} marginTop='7%' justifyContent={'center'}>\r\n  //   <VStack>\r\n  //   <FormControl>\r\n  //         <Heading textAlign={'center'}>{isMember ? \"Login\" : \"Register\"}</Heading>\r\n  //         <Stack marginTop={'2%'}>\r\n  //           {(!isMember) && <Register user={user} handleUser={handleUser} />}\r\n  //         </Stack>\r\n            \r\n\r\n  //   <Login user={user} handleUser={handleUser} />\r\n    \r\n  //   <Button colorScheme={'teal'} variant='ghost' float={'right'} marginTop='2%' onClick={toggleMember}>\r\n  //       {!isMember ? 'Already a member? Login Here' : 'Not a member yet? Register Here'}\r\n  //   </Button>\r\n  //   </FormControl>\r\n  //   </VStack>\r\n  // </Flex>\r\n  )\r\n}\r\n\r\nexport default LoginP"],"mappings":";;AAAA;AACA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAAQC,KAAK,EAAEC,QAAQ,QAAO,OAAO;AACrC;AAAA;AAAA;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACzC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEF,oBACF;IAAA,wBACA,QAAC,MAAM;MAAC,QAAQ;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAClC;MAAA;MAAA;MAAA;IAAA,QAAM,cACI,EAACE,QAAQ;EAAA;;EAIjB;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEF,CAAC;AAAA,GApCKD,MAAM;AAAA,KAANA,MAAM;AAsCZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}